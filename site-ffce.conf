-- Community specification for Freifunk Celle.
{
  -- Community declaration.
  hostname_prefix = 'test-',
  site_name = 'Freifunk GÃ¼tersloh TEST',
  site_code = 'ffgt',
  timezone = 'CET-1CEST,M3.5.0,M10.5.0/3',

  -- Support site_select feature
  site_select = true,
  site_selectcode = 'gut',

  -- Prefixes used by the system.
  prefix4 = '10.255.0.0/20',
  prefix6 = 'fd42:ffee:ff12:0aff::/64',

  -- Services for time synchronization.
  ntp_servers = {'ntp.services.ffgt.net', 'eu.ntp.sixxs.net'},

  -- Wireless specifications.
  regdom = 'DE',
  wifi24 = {
    ssid = 'KreisGT.freifunk.net',
    channel = 9,
    htmode = 'HT40+',
    mesh_ssid = '00:42:de:ca:fb:ad',
    mesh_bssid = '00:42:de:ca:fb:ad',
    mesh_mcast_rate = 12000,
    stamesh_ssid = 'stamesh.ftu',
    mesh_enc = 'psk',
    stamesh_enc = 'psk-mixed+tkip+ccmp',
    mesh_psk = 'Ich weiss, was ich tue.',
  },
  wifi5 = {
    ssid = 'KreisGT.freifunk.net 5GHz',
    channel = 44,
    htmode = 'HT40+',
    mesh_ssid = '00:42:de:ca:fb:ad',
    mesh_bssid = '00:42:de:ca:fb:ad',
    mesh_mcast_rate = 12000,
    stamesh_ssid = 'stamesh.ftu',
    mesh_enc = 'psk',
    stamesh_enc = 'psk-mixed+tkip+ccmp',
    mesh_psk = 'Ich weiss, was ich tue.',
  },

  -- Node finder for connecting to next local node.
  next_node = {
    ip4 = '10.255.0.1',
    ip6 = 'fd42:ffee:ff12:0aff::1',
    mac = 'de:ff:ff:ff:ff:ce',
  },

  -- fastd (vpn) settings
  fastd_mesh_vpn = {
    -- cipher(s) to use
    methods = {'salsa2012+umac'},
    enabled = true,
    configurable = true,
    -- the maximum transfer unit
    -- use 1426 for IPv4 gateways
    -- Next release: MTU 1343
    mtu = 1426,
    groups = {
      backbone = {
        -- specifies how many servers are contacted
        -- by a client simultanously
        limit = 1,
        -- list all available vpn servers
        peers = {
          gw01 = {
            key = '2ddba2fe0ed61615016cbbbd71ca1afcc7432dd8eb81c1e18806bcbb766b72b3',
            remotes = {'"gw01.4830.org" port 10000'},
          },
          gw02 = {
            key = 'ee0902a7452d017cd154005e10944dcb278d648776988922d52b960e05d49780',
            remotes = {'"gw02.4830.org" port 10000'},
          },
          gw03 = {
            key = '40343e165e102f65513b5ddb2eb855289fc2e353af672fbe8924627acc2bf8ce',
            remotes = {'"gw03.4830.org" port 10000'},
          },
          gw04 = {
            key = '82532813585cba2538498df56869a57865fe8fa271c4eb61a9e4831310efbdcd',
            remotes = {'"gw04.4830.org" port 10000'},
          },
          gw05 = {
            key = '7f94344fa80d5ec144c14db366712a0cf34f420571cbe4e1025a3f23a88474cb',
            remotes = {'"gw05.4830.org" port 10000'},
          },
          gw06 = {
            key = 'be56eb2cb9493f22b6e0cce4c7f8c838fd44e8c44c6983c58265bbe1c2cf04c0',
            remotes = {'"gw06.4830.org" port 10000'},
          },
        },
      },
      event = {
       limit = 1,
          peers = {
            event01 = {
              key = '21630f3eec4c38808b93947a5ac2f5eae39538b47e9225513bd2b2fa27c4593a',
              remotes = {'"gw-event01.4830.org" port 10000'},
          },
          event02 = {
            key = 'e54a099a3967e2eae0a5e9afc4048adea0f5a7051bfc37616748797c76df77ac',
            remotes = {'"gw-event02.4830.org" port 10000'},
          },
          test01 = {
            key = '3d994652d67cc7a2b4d18cc852d450cd78bfdc50c2c3a8c6ed7df18591c033b3',
            remotes = {'"gw-test01.4830.org" port 10000'},
          },
        },
      },
    },
  },

  -- configure the autoupdater
  autoupdater = {
    enabled = 1,
    -- default branch for a firmware
    -- In config-mode, the user can select a different branch from below
    branch = 'stable',
    -- available branches for the autoupdater
    branches = {
      stable = {
        -- visible name of this branch (why not use the internal identifier here, too)
        name = 'stable',
        -- where to get the manifest file (without the trailing /manifest)
        -- It's wise to use an internal address here,
        -- but specifying a publicly available update site does not hurt.
        mirrors = {'http://firmware.ipv4.4830.org/stable/sysupgrade', 'http://firmware.ipv6.4830.org/stable/sysupgrade'},
        -- Number of valid manifest signatures necessary to accept the manifest as "good".
        good_signatures = 2,
        -- list of public keys which are considered "good" for manifest signatures
        pubkeys = {
          'fbc997a8fd3b7372b3044cf855c660f70b0f713f8ab1dca4b9a1ae297c8f5588', -- FFGT builder
          'a7ac1e48f4459a995cf6bcd8d3668ca26cf36a1fe5981ddfca93d4c04632deeb', -- wusel
          '3c09bcf54e9c2d244d7888c9d2bdea08b2f2dc249deda23ef8194a114be85390', -- QA1
          'f3a88717ce7ec8250b40191edf088d6f30b9179ad7ec80a8e14abfd270ff8770', -- QA2
        },
      },
      testing = {
        name = 'testing',
        mirrors = {'http://firmware.ipv4.4830.org/testing/sysupgrade', 'http://firmware.ipv6.4830.org/testing/sysupgrade'},
        good_signatures = 1,
        pubkeys = {
          'a7ac1e48f4459a995cf6bcd8d3668ca26cf36a1fe5981ddfca93d4c04632deeb', -- wusel
          '3c09bcf54e9c2d244d7888c9d2bdea08b2f2dc249deda23ef8194a114be85390', -- QA1
          'f3a88717ce7ec8250b40191edf088d6f30b9179ad7ec80a8e14abfd270ff8770', -- QA2
        },
      },
    },
  },

  -- Bandwidth limiting setup, configurable by user on setup.
  simple_tc = {
    mesh_vpn = {
      ifname = 'mesh-vpn',
      enabled = false,
      limit_egress = 600,
      limit_ingress = 6000,
    },
  },
}
